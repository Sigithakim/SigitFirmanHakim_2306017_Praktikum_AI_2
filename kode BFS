{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyNtPwAIlmwoOhA/FzTLAYK3"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":1,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"ddefEZLH6OXq","executionInfo":{"status":"ok","timestamp":1741960120548,"user_tz":-420,"elapsed":21,"user":{"displayName":"Sigit Firman Hakim","userId":"14536828570121894268"}},"outputId":"21b65bbf-7019-428f-bc2f-6bc082508ad1"},"outputs":[{"output_type":"stream","name":"stdout","text":["Berikut adalah jalur BFS dari node 0 ke node 3:\n","[0, 2, 3]\n"]}],"source":["import collections\n","\n","def bfs_path(graph, start, target):\n","\n","    visited = set()\n","    queue = collections.deque([(start, [start])])\n","\n","    while queue:\n","        vertex, path = queue.popleft()\n","\n","        if vertex == target:\n","            return path\n","        if vertex not in visited:\n","            visited.add(vertex)\n","\n","            for neighbour in graph[vertex]:\n","                if neighbour not in visited:\n","                    queue.append((neighbour, path + [neighbour]))\n","\n","    return \"Tidak ada jalur yang ditemukan.\"\n","\n","if __name__ == \"__main__\":\n","    graph = {0: [1, 2], 1: [2], 2: [3], 3: [1, 2]}\n","\n","    start_node = 0\n","    target_node = 3\n","\n","    print(f\"Berikut adalah jalur BFS dari node {start_node} ke node {target_node}:\")\n","    print(bfs_path(graph, start_node, target_node))"]}]}